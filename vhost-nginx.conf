##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
	listen 80;
	listen [::]:80;

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	root /var/www/vhosts/staging.smb.nuworks.ph/public;
	index index.php index.html index.htm index.nginx-debian.html;

        server_name _;

	#if ($http_host ~ "yourdomain.hypernode.io:8443")  {
  	#	set $block_me_now A;
	#}
 
	#if ($remote_addr != 180.232.124.116) {
  	#	set $block_me_now B;
	#}
 

	#if ($block_me_now = B) {
    	#	return 403;
    	#	break;
	#}

	if ($request_method !~ ^(GET|PUT|DELETE|POST)$ ) {
       		return 405;
	}

        location / {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE';
                add_header 'Access-Control-Allow-Headers' 'x-requested-with, Content-Type, Origin, Authorization, accept, client-security-token, token,X-Auth-Token';
                try_files $uri $uri/ /index.php?$query_string;
        }
        error_log /var/log/nginx/error.log;
        error_page 404 /404.html;
	error_page 403 =404 /404.html;
        error_page 500 502 503 504 /50x.html;

	location = /403.html {
		allow all;
		return 404;
	}

        location = /50x.html {
                root /usr/share/nginx/html;
        }

        location ~ \.php$ {
                try_files $uri /index.php =404;
                fastcgi_split_path_info ^(.+\.php)(/.+)$;
                fastcgi_pass unix:/var/run/php/php7.3-fpm.sock;
                fastcgi_index index.php;
                fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                include fastcgi_params;
        }

        location ~ /\.ht {
               deny all;
        }

	# Set Cache-Control header
        # On js,html,css,gz files
        location ~ \.(js|gz|html|css)$ {
                expires 600s;
                add_header Pragma "private";
                add_header Cache-Control "private, no-cache, no-store";
        }

}
